{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'https://frontend-take-home-service.fetch.com';\n\n// Configure axios to automatically handle credentials\naxios.defaults.withCredentials = true;\n\n// Function to handle user login\nexport const login = async (name, email) => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/auth/login`, {\n      name,\n      email\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Login API error:', error);\n    throw error;\n  }\n};\n\n// Function to search dogs with filters\nexport const searchDogs = async (filters = {}) => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/dogs/search`, {\n      params: filters\n    });\n    // Directly return the data if the structure is as expected\n    return response.data.resultIds; // Assuming resultIds is an array of dog objects\n  } catch (error) {\n    console.error('Search API error:', error);\n    return []; // Return empty array on error to ensure UI doesn't break\n  }\n};\n\n// Add more API functions as necessary","map":{"version":3,"names":["axios","API_BASE_URL","defaults","withCredentials","login","name","email","response","post","data","error","console","searchDogs","filters","get","params","resultIds"],"sources":["/Users/pop/Desktop/fetch-dogs/src/api/fetchAPI.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = 'https://frontend-take-home-service.fetch.com';\n\n// Configure axios to automatically handle credentials\naxios.defaults.withCredentials = true;\n\n// Function to handle user login\nexport const login = async (name, email) => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/auth/login`, { name, email });\n    return response.data;\n  } catch (error) {\n    console.error('Login API error:', error);\n    throw error;\n  }\n};\n\n// Function to search dogs with filters\nexport const searchDogs = async (filters = {}) => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/dogs/search`, { params: filters });\n    // Directly return the data if the structure is as expected\n    return response.data.resultIds;  // Assuming resultIds is an array of dog objects\n  } catch (error) {\n    console.error('Search API error:', error);\n    return []; // Return empty array on error to ensure UI doesn't break\n  }\n};\n\n// Add more API functions as necessary\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,8CAA8C;;AAEnE;AACAD,KAAK,CAACE,QAAQ,CAACC,eAAe,GAAG,IAAI;;AAErC;AACA,OAAO,MAAMC,KAAK,GAAG,MAAAA,CAAOC,IAAI,EAAEC,KAAK,KAAK;EAC1C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,IAAI,CAAC,GAAGP,YAAY,aAAa,EAAE;MAAEI,IAAI;MAAEC;IAAM,CAAC,CAAC;IAChF,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;IACxC,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAME,UAAU,GAAG,MAAAA,CAAOC,OAAO,GAAG,CAAC,CAAC,KAAK;EAChD,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMP,KAAK,CAACc,GAAG,CAAC,GAAGb,YAAY,cAAc,EAAE;MAAEc,MAAM,EAAEF;IAAQ,CAAC,CAAC;IACpF;IACA,OAAON,QAAQ,CAACE,IAAI,CAACO,SAAS,CAAC,CAAE;EACnC,CAAC,CAAC,OAAON,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;IACzC,OAAO,EAAE,CAAC,CAAC;EACb;AACF,CAAC;;AAED","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}