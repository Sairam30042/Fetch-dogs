{"ast":null,"code":"var _jsxFileName = \"/Users/pop/Desktop/fetch-dogs/src/pages/search.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Search() {\n  _s();\n  const [breed, setBreed] = useState(); // Assuming you might want to allow users to search by breed\n  const [dogIds, setDogIds] = useState([]);\n  const [dogDetails, setDogDetails] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    setLoading(true);\n    setError(null);\n    axios.get('https://frontend-take-home-service.fetch.com/dogs/search', {\n      params: {\n        breed,\n        size: 25,\n        from: 0,\n        sort: 'breed:asc'\n      }\n    }).then(response => {\n      setLoading(false);\n      setDogIds(response.data.resultIds);\n    }).catch(error => {\n      console.error('Failed to fetch dog IDs:', error);\n      setError('Failed to fetch dog IDs');\n      setLoading(false);\n    });\n  }, [breed]);\n  useEffect(() => {\n    if (selectedBreed) {\n      setLoading(true);\n      setError(null);\n      axios.get(`https://frontend-take-home-service.fetch.com/dogs/search`, {\n        params: {\n          breed: selectedBreed,\n          size: 25,\n          from: 0,\n          sort: 'breed:asc'\n        }\n      }).then(response => {\n        // Assume response.data.resultIds contains the dog IDs\n        const dogIds = response.data.resultIds;\n        Promise.all(dogIds.map(id => axios.get(`https://frontend-take-home-service.fetch.com/dogs/${id}`).catch(err => ({\n          error: true,\n          id\n        })) // Handle individual errors and continue\n        )).then(details => {\n          var _details$find;\n          setDogDetails(details.filter(detail => !detail.error)); // Filter out failed requests\n          setError(((_details$find = details.find(detail => detail.error)) === null || _details$find === void 0 ? void 0 : _details$find.message) || 'Some dog details could not be fetched');\n          setLoading(false);\n        });\n      }).catch(error => {\n        console.error('Failed to fetch dog details:', error);\n        setError('Failed to fetch dog details');\n        setLoading(false);\n      });\n    }\n  }, [selectedBreed]);\n  useEffect(() => {\n    if (dogIds.length > 0) {\n      const fetchDetails = async () => {\n        setLoading(true);\n        const detailsPromises = dogIds.map(id => axios.get(`https://frontend-take-home-service.fetch.com/dogs/${id}`));\n        try {\n          const detailsResponses = await Promise.all(detailsPromises);\n          setDogDetails(detailsResponses.map(response => response.data));\n          setLoading(false);\n        } catch (error) {\n          console.error('Failed to fetch dog details:', error);\n          setError('Failed to fetch dog details');\n          setLoading(false);\n        }\n      };\n      fetchDetails();\n    }\n  }, [dogIds]); // This runs whenever dogIds updates, fetching details for each new ID\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Search Dogs by Breed: \", breed]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 25\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: dogDetails.map((dog, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Name: \", dog.name, \", Breed: \", dog.breed, \", Age: \", dog.age]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n}\n_s(Search, \"86376RQvbieofX+pHM5rInndCpQ=\");\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Search","_s","breed","setBreed","dogIds","setDogIds","dogDetails","setDogDetails","loading","setLoading","error","setError","get","params","size","from","sort","then","response","data","resultIds","catch","console","selectedBreed","Promise","all","map","id","err","details","_details$find","filter","detail","find","message","length","fetchDetails","detailsPromises","detailsResponses","children","fileName","_jsxFileName","lineNumber","columnNumber","dog","index","name","age","_c","$RefreshReg$"],"sources":["/Users/pop/Desktop/fetch-dogs/src/pages/search.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction Search() {\n    const [breed, setBreed] = useState(); // Assuming you might want to allow users to search by breed\n    const [dogIds, setDogIds] = useState([]);\n    const [dogDetails, setDogDetails] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        setLoading(true);\n        setError(null);\n\n        axios.get('https://frontend-take-home-service.fetch.com/dogs/search', {\n            params: { breed, size: 25, from: 0, sort: 'breed:asc' }\n        })\n        .then(response => {\n            setLoading(false);\n            setDogIds(response.data.resultIds);\n        })\n        .catch(error => {\n            console.error('Failed to fetch dog IDs:', error);\n            setError('Failed to fetch dog IDs');\n            setLoading(false);\n        });\n    }, [breed]);\n    useEffect(() => {\n        if (selectedBreed) {\n            setLoading(true);\n            setError(null);\n            axios.get(`https://frontend-take-home-service.fetch.com/dogs/search`, {\n                params: { breed: selectedBreed, size: 25, from: 0, sort: 'breed:asc' }\n            })\n            .then(response => {\n                // Assume response.data.resultIds contains the dog IDs\n                const dogIds = response.data.resultIds;\n                Promise.all(dogIds.map(id => \n                    axios.get(`https://frontend-take-home-service.fetch.com/dogs/${id}`)\n                    .catch(err => ({ error: true, id })) // Handle individual errors and continue\n                ))\n                .then(details => {\n                    setDogDetails(details.filter(detail => !detail.error)); // Filter out failed requests\n                    setError(details.find(detail => detail.error)?.message || 'Some dog details could not be fetched');\n                    setLoading(false);\n                });\n            })\n            .catch(error => {\n                console.error('Failed to fetch dog details:', error);\n                setError('Failed to fetch dog details');\n                setLoading(false);\n            });\n        }\n    }, [selectedBreed]);\n    \n\n    useEffect(() => {\n        if (dogIds.length > 0) {\n            const fetchDetails = async () => {\n                setLoading(true);\n                const detailsPromises = dogIds.map(id => \n                    axios.get(`https://frontend-take-home-service.fetch.com/dogs/${id}`)\n                );\n                try {\n                    const detailsResponses = await Promise.all(detailsPromises);\n                    setDogDetails(detailsResponses.map(response => response.data));\n                    setLoading(false);\n                } catch (error) {\n                    console.error('Failed to fetch dog details:', error);\n                    setError('Failed to fetch dog details');\n                    setLoading(false);\n                }\n            };\n\n            fetchDetails();\n        }\n    }, [dogIds]); // This runs whenever dogIds updates, fetching details for each new ID\n\n    return (\n        <div>\n            <h1>Search Dogs by Breed: {breed}</h1>\n            {loading && <p>Loading...</p>}\n            {error && <p>Error: {error}</p>}\n            <ul>\n                {dogDetails.map((dog, index) => (\n                    <li key={index}>\n                        Name: {dog.name}, Breed: {dog.breed}, Age: {dog.age}\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n}\n\nexport default Search;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}