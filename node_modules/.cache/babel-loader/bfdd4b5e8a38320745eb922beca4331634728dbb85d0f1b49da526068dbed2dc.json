{"ast":null,"code":"// fetchAPI.js\nimport axios from 'axios';\nconst API_BASE_URL = 'https://frontend-take-home-service.fetch.com';\n\n// Ensure cookies are included with every request\naxios.defaults.withCredentials = true;\nexport const login = async (name, email) => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/auth/login`, {\n      name,\n      email\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Login API error:', error);\n    throw error;\n  }\n};\n\n// Fetch multiple dog details by passing an array of dog IDs\nexport const fetchDogsByIds = async dogIDs => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/dogs`, dogIDs);\n    return response.data; // Expected to return an array of Dog objects\n  } catch (error) {\n    console.error('Failed to fetch dog details:', error);\n    throw error;\n  }\n};\n\n// Search for dogs based on filters (which include pagination and sort info)\n// Returns an object: { dogs, total, next, prev }\nexport const searchDogs = async (filters = {}) => {\n  try {\n    const searchResponse = await axios.get(`${API_BASE_URL}/dogs/search`, {\n      params: filters\n    });\n    if (searchResponse.data && Array.isArray(searchResponse.data.resultIds)) {\n      const {\n        resultIds,\n        total,\n        next,\n        prev\n      } = searchResponse.data;\n      const dogs = await fetchDogsByIds(resultIds);\n      return {\n        dogs,\n        total,\n        next,\n        prev\n      };\n    }\n    return {\n      dogs: [],\n      total: 0,\n      next: null,\n      prev: null\n    };\n  } catch (error) {\n    console.error('Search API error:', error);\n    return {\n      dogs: [],\n      total: 0,\n      next: null,\n      prev: null\n    };\n  }\n};\n\n// Generate a match based on the favorited dog IDs\n// Expects favoriteIds to be an array of dog IDs.\nexport const generateMatch = async favoriteIds => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/dogs/match`, favoriteIds);\n    return response.data; // Expected to be an object with a property `match`\n  } catch (error) {\n    console.error('Match generation error:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","defaults","withCredentials","login","name","email","response","post","data","error","console","fetchDogsByIds","dogIDs","searchDogs","filters","searchResponse","get","params","Array","isArray","resultIds","total","next","prev","dogs","generateMatch","favoriteIds"],"sources":["/Users/pop/Desktop/fetch-dogs/src/api/fetchAPI.js"],"sourcesContent":["// fetchAPI.js\nimport axios from 'axios';\n\nconst API_BASE_URL = 'https://frontend-take-home-service.fetch.com';\n\n// Ensure cookies are included with every request\naxios.defaults.withCredentials = true;\n\nexport const login = async (name, email) => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/auth/login`, { name, email });\n    return response.data;\n  } catch (error) {\n    console.error('Login API error:', error);\n    throw error;\n  }\n};\n\n// Fetch multiple dog details by passing an array of dog IDs\nexport const fetchDogsByIds = async (dogIDs) => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/dogs`, dogIDs);\n    return response.data; // Expected to return an array of Dog objects\n  } catch (error) {\n    console.error('Failed to fetch dog details:', error);\n    throw error;\n  }\n};\n\n// Search for dogs based on filters (which include pagination and sort info)\n// Returns an object: { dogs, total, next, prev }\nexport const searchDogs = async (filters = {}) => {\n  try {\n    const searchResponse = await axios.get(`${API_BASE_URL}/dogs/search`, { params: filters });\n    if (searchResponse.data && Array.isArray(searchResponse.data.resultIds)) {\n      const { resultIds, total, next, prev } = searchResponse.data;\n      const dogs = await fetchDogsByIds(resultIds);\n      return { dogs, total, next, prev };\n    }\n    return { dogs: [], total: 0, next: null, prev: null };\n  } catch (error) {\n    console.error('Search API error:', error);\n    return { dogs: [], total: 0, next: null, prev: null };\n  }\n};\n\n// Generate a match based on the favorited dog IDs\n// Expects favoriteIds to be an array of dog IDs.\nexport const generateMatch = async (favoriteIds) => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/dogs/match`, favoriteIds);\n    return response.data; // Expected to be an object with a property `match`\n  } catch (error) {\n    console.error('Match generation error:', error);\n    throw error;\n  }\n};\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,8CAA8C;;AAEnE;AACAD,KAAK,CAACE,QAAQ,CAACC,eAAe,GAAG,IAAI;AAErC,OAAO,MAAMC,KAAK,GAAG,MAAAA,CAAOC,IAAI,EAAEC,KAAK,KAAK;EAC1C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,IAAI,CAAC,GAAGP,YAAY,aAAa,EAAE;MAAEI,IAAI;MAAEC;IAAM,CAAC,CAAC;IAChF,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;IACxC,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAME,cAAc,GAAG,MAAOC,MAAM,IAAK;EAC9C,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMP,KAAK,CAACQ,IAAI,CAAC,GAAGP,YAAY,OAAO,EAAEY,MAAM,CAAC;IACjE,OAAON,QAAQ,CAACE,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpD,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA;AACA,OAAO,MAAMI,UAAU,GAAG,MAAAA,CAAOC,OAAO,GAAG,CAAC,CAAC,KAAK;EAChD,IAAI;IACF,MAAMC,cAAc,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAAC,GAAGhB,YAAY,cAAc,EAAE;MAAEiB,MAAM,EAAEH;IAAQ,CAAC,CAAC;IAC1F,IAAIC,cAAc,CAACP,IAAI,IAAIU,KAAK,CAACC,OAAO,CAACJ,cAAc,CAACP,IAAI,CAACY,SAAS,CAAC,EAAE;MACvE,MAAM;QAAEA,SAAS;QAAEC,KAAK;QAAEC,IAAI;QAAEC;MAAK,CAAC,GAAGR,cAAc,CAACP,IAAI;MAC5D,MAAMgB,IAAI,GAAG,MAAMb,cAAc,CAACS,SAAS,CAAC;MAC5C,OAAO;QAAEI,IAAI;QAAEH,KAAK;QAAEC,IAAI;QAAEC;MAAK,CAAC;IACpC;IACA,OAAO;MAAEC,IAAI,EAAE,EAAE;MAAEH,KAAK,EAAE,CAAC;MAAEC,IAAI,EAAE,IAAI;MAAEC,IAAI,EAAE;IAAK,CAAC;EACvD,CAAC,CAAC,OAAOd,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;IACzC,OAAO;MAAEe,IAAI,EAAE,EAAE;MAAEH,KAAK,EAAE,CAAC;MAAEC,IAAI,EAAE,IAAI;MAAEC,IAAI,EAAE;IAAK,CAAC;EACvD;AACF,CAAC;;AAED;AACA;AACA,OAAO,MAAME,aAAa,GAAG,MAAOC,WAAW,IAAK;EAClD,IAAI;IACF,MAAMpB,QAAQ,GAAG,MAAMP,KAAK,CAACQ,IAAI,CAAC,GAAGP,YAAY,aAAa,EAAE0B,WAAW,CAAC;IAC5E,OAAOpB,QAAQ,CAACE,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}