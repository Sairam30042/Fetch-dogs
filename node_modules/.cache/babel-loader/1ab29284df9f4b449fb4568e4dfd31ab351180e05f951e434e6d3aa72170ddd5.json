{"ast":null,"code":"var _jsxFileName = \"/Users/pop/Desktop/fetch-dogs/src/components/Searchdogs.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SearchDogs() {\n  _s();\n  const [breeds, setBreeds] = useState([]);\n  const [selectedBreed, setSelectedBreed] = useState('');\n  const [dogs, setDogs] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Fetch breeds on component mount\n  useEffect(() => {\n    setLoading(true);\n    axios.get('https://frontend-take-home-service.fetch.com/dogs/breeds').then(response => {\n      setBreeds(response.data); // assuming the response data is an array of breeds\n      setLoading(false);\n    }).catch(error => {\n      console.error('Failed to fetch breeds:', error);\n      setError('Failed to fetch breeds');\n      setLoading(false);\n    });\n  }, []);\n\n  // Fetch dogs based on selected breed\n  const fetchDogsByBreed = breed => {\n    setLoading(true);\n    axios.get('https://frontend-take-home-service.fetch.com/dogs/search', {\n      params: {\n        breed: breed,\n        size: 25,\n        from: 0,\n        sort: 'breed:asc'\n      }\n    }).then(response => {\n      setDogs(response.data.resultIds); // Update based on actual response structure\n      setLoading(false);\n    }).catch(error => {\n      console.error(`Failed to fetch dogs for breed ${breed}:`, error);\n      setError(`Failed to fetch dogs for breed ${breed}`);\n      setLoading(false);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Search for Dogs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedBreed,\n      onChange: e => {\n        setSelectedBreed(e.target.value);\n        fetchDogsByBreed(e.target.value);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a breed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), breeds.map((breed, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: breed,\n        children: breed\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 24\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: dogs.map((dog, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: dog\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }, this) // Modify based on how you want to display dogs\n      )\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n_s(SearchDogs, \"O6pDu+QzDHrQcSMudU6RxrOAe/o=\");\n_c = SearchDogs;\nexport default SearchDogs;\nvar _c;\n$RefreshReg$(_c, \"SearchDogs\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","SearchDogs","_s","breeds","setBreeds","selectedBreed","setSelectedBreed","dogs","setDogs","loading","setLoading","error","setError","get","then","response","data","catch","console","fetchDogsByBreed","breed","params","size","from","sort","resultIds","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","map","index","dog","_c","$RefreshReg$"],"sources":["/Users/pop/Desktop/fetch-dogs/src/components/Searchdogs.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction SearchDogs() {\n    const [breeds, setBreeds] = useState([]);\n    const [selectedBreed, setSelectedBreed] = useState('');\n    const [dogs, setDogs] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    // Fetch breeds on component mount\n    useEffect(() => {\n        setLoading(true);\n        axios.get('https://frontend-take-home-service.fetch.com/dogs/breeds')\n            .then(response => {\n                setBreeds(response.data); // assuming the response data is an array of breeds\n                setLoading(false);\n            })\n            .catch(error => {\n                console.error('Failed to fetch breeds:', error);\n                setError('Failed to fetch breeds');\n                setLoading(false);\n            });\n    }, []);\n\n    // Fetch dogs based on selected breed\n    const fetchDogsByBreed = (breed) => {\n        setLoading(true);\n        axios.get('https://frontend-take-home-service.fetch.com/dogs/search', {\n            params: { breed: breed, size: 25, from: 0, sort: 'breed:asc' }\n        })\n        .then(response => {\n            setDogs(response.data.resultIds); // Update based on actual response structure\n            setLoading(false);\n        })\n        .catch(error => {\n            console.error(`Failed to fetch dogs for breed ${breed}:`, error);\n            setError(`Failed to fetch dogs for breed ${breed}`);\n            setLoading(false);\n        });\n    };\n\n    return (\n        <div>\n            <h1>Search for Dogs</h1>\n            <select\n                value={selectedBreed}\n                onChange={(e) => {\n                    setSelectedBreed(e.target.value);\n                    fetchDogsByBreed(e.target.value);\n                }}\n            >\n                <option value=\"\">Select a breed</option>\n                {breeds.map((breed, index) => (\n                    <option key={index} value={breed}>{breed}</option>\n                ))}\n            </select>\n\n            {loading ? <p>Loading...</p> : (\n                <ul>\n                    {dogs.map((dog, index) => (\n                        <li key={index}>{dog}</li> // Modify based on how you want to display dogs\n                    ))}\n                </ul>\n            )}\n            {error && <p>{error}</p>}\n        </div>\n    );\n}\n\nexport default SearchDogs;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}