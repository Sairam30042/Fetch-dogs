{"ast":null,"code":"var _jsxFileName = \"/Users/pop/Desktop/fetch-dogs/src/pages/search.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Search() {\n  _s();\n  const [breed, setBreed] = useState(''); // Starting with an empty string for breed\n  const [breeds, setBreeds] = useState([]); // This will hold the list of all breeds for the dropdown\n  const [dogIds, setDogIds] = useState([]); // This will hold the IDs fetched based on the breed\n  const [dogDetails, setDogDetails] = useState([]); // This will store the detailed information of the dogs\n  const [loading, setLoading] = useState(false); // Track loading state\n  const [error, setError] = useState(null); // Track errors\n\n  // Fetch breeds on component mount to populate breed options\n  useEffect(() => {\n    axios.get('https://frontend-take-home-service.fetch.com/dogs/breeds').then(response => {\n      setBreeds(response.data); // Assuming response.data contains the breeds directly\n    }).catch(error => {\n      console.error('Failed to fetch breeds:', error);\n      setError('Failed to fetch breeds. Please try again.');\n    });\n  }, []);\n\n  // Fetch dog IDs whenever the selected breed changes\n  useEffect(() => {\n    if (breed) {\n      setLoading(true);\n      axios.get(`https://frontend-take-home-service.fetch.com/dogs/search`, {\n        params: {\n          breed: breed,\n          size: 25,\n          from: 0,\n          sort: 'breed:asc'\n        }\n      }).then(response => {\n        setDogIds(response.data.resultIds);\n        setLoading(false);\n      }).catch(error => {\n        console.error(`Failed to fetch dogs for breed ${breed}:`, error);\n        setError(`Failed to fetch dogs for breed ${breed}. Please try again.`);\n        setLoading(false);\n      });\n    }\n  }, [breed]);\n\n  // Fetch detailed information for each dog when dogIds updates\n  useEffect(() => {\n    if (dogIds.length > 0) {\n      setLoading(true);\n      const detailsPromises = dogIds.map(id => axios.get(`https://frontend-take-home-service.fetch.com/dogs/${id}`).catch(err => {\n        console.error(`Failed to fetch details for dog ID ${id}:`, err);\n        return null; // Return null for errors to filter them out later\n      }));\n      Promise.all(detailsPromises).then(details => {\n        setDogDetails(details.filter(detail => detail !== null)); // Filter out failed requests\n        setLoading(false);\n      }).catch(error => {\n        console.error('Failed to fetch dog details:', error);\n        setError('Failed to fetch dog details. Please try again.');\n        setLoading(false);\n      });\n    }\n  }, [dogIds]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Search Dogs by Breed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: breed,\n      onChange: e => setBreed(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a breed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), breeds.map((b, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: b,\n        children: b\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 25\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: dogDetails.map((dog, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Name: \", dog.name, \", Breed: \", dog.breed, \", Age: \", dog.age]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n_s(Search, \"J/zv0I4xV5zzPxAn45Z3o64Jkjg=\");\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Search","_s","breed","setBreed","breeds","setBreeds","dogIds","setDogIds","dogDetails","setDogDetails","loading","setLoading","error","setError","get","then","response","data","catch","console","params","size","from","sort","resultIds","length","detailsPromises","map","id","err","Promise","all","details","filter","detail","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","b","index","dog","name","age","_c","$RefreshReg$"],"sources":["/Users/pop/Desktop/fetch-dogs/src/pages/search.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction Search() {\n    const [breed, setBreed] = useState(''); // Starting with an empty string for breed\n    const [breeds, setBreeds] = useState([]); // This will hold the list of all breeds for the dropdown\n    const [dogIds, setDogIds] = useState([]); // This will hold the IDs fetched based on the breed\n    const [dogDetails, setDogDetails] = useState([]); // This will store the detailed information of the dogs\n    const [loading, setLoading] = useState(false); // Track loading state\n    const [error, setError] = useState(null); // Track errors\n\n    // Fetch breeds on component mount to populate breed options\n    useEffect(() => {\n        axios.get('https://frontend-take-home-service.fetch.com/dogs/breeds')\n            .then(response => {\n                setBreeds(response.data); // Assuming response.data contains the breeds directly\n            })\n            .catch(error => {\n                console.error('Failed to fetch breeds:', error);\n                setError('Failed to fetch breeds. Please try again.');\n            });\n    }, []);\n\n    // Fetch dog IDs whenever the selected breed changes\n    useEffect(() => {\n        if (breed) {\n            setLoading(true);\n            axios.get(`https://frontend-take-home-service.fetch.com/dogs/search`, {\n                params: { breed: breed, size: 25, from: 0, sort: 'breed:asc' }\n            })\n            .then(response => {\n                setDogIds(response.data.resultIds);\n                setLoading(false);\n            })\n            .catch(error => {\n                console.error(`Failed to fetch dogs for breed ${breed}:`, error);\n                setError(`Failed to fetch dogs for breed ${breed}. Please try again.`);\n                setLoading(false);\n            });\n        }\n    }, [breed]);\n\n    // Fetch detailed information for each dog when dogIds updates\n    useEffect(() => {\n        if (dogIds.length > 0) {\n            setLoading(true);\n            const detailsPromises = dogIds.map(id => \n                axios.get(`https://frontend-take-home-service.fetch.com/dogs/${id}`)\n                .catch(err => {\n                    console.error(`Failed to fetch details for dog ID ${id}:`, err);\n                    return null; // Return null for errors to filter them out later\n                })\n            );\n\n            Promise.all(detailsPromises)\n            .then(details => {\n                setDogDetails(details.filter(detail => detail !== null)); // Filter out failed requests\n                setLoading(false);\n            })\n            .catch(error => {\n                console.error('Failed to fetch dog details:', error);\n                setError('Failed to fetch dog details. Please try again.');\n                setLoading(false);\n            });\n        }\n    }, [dogIds]);\n\n    return (\n        <div>\n            <h1>Search Dogs by Breed</h1>\n            <select value={breed} onChange={e => setBreed(e.target.value)}>\n                <option value=\"\">Select a breed</option>\n                {breeds.map((b, index) => (\n                    <option key={index} value={b}>{b}</option>\n                ))}\n            </select>\n            {loading && <p>Loading...</p>}\n            {error && <p>Error: {error}</p>}\n            <ul>\n                {dogDetails.map((dog, index) => (\n                    <li key={index}>\n                        Name: {dog.name}, Breed: {dog.breed}, Age: {dog.age}\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n}\n\nexport default Search;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}