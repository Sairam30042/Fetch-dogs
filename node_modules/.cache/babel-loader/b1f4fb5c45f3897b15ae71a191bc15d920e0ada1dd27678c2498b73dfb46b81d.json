{"ast":null,"code":"var _jsxFileName = \"/Users/pop/Desktop/fetch-dogs/src/pages/search.js\",\n  _s = $RefreshSig$();\n// Search.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { searchDogs } from '../api/fetchAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Search() {\n  _s();\n  const [breed, setBreed] = useState('');\n  const [breeds, setBreeds] = useState([]);\n  const [dogDetails, setDogDetails] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Fetch available breeds on component mount\n  useEffect(() => {\n    axios.get('https://frontend-take-home-service.fetch.com/dogs/breeds').then(response => {\n      setBreeds(response.data); // Expecting response.data to be an array of breed strings\n    }).catch(error => {\n      console.error('Failed to fetch breeds:', error);\n      setError('Failed to fetch breeds. Please try again.');\n    });\n  }, []);\n\n  // Fetch dog details whenever the selected breed changes\n  useEffect(() => {\n    if (breed) {\n      setLoading(true);\n      const filters = {\n        breeds: [breed],\n        size: 25,\n        from: 0,\n        sort: 'breed:asc'\n      };\n      searchDogs(filters).then(dogs => {\n        setDogDetails(dogs);\n        setLoading(false);\n        setError(null);\n      }).catch(error => {\n        console.error(`Failed to fetch dogs for breed ${breed}:`, error);\n        setError(`Failed to fetch dogs for breed ${breed}. Please try again.`);\n        setLoading(false);\n      });\n    } else {\n      // If no breed is selected, clear the dog details\n      setDogDetails([]);\n    }\n  }, [breed]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Search Dogs by Breed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: breed,\n      onChange: e => setBreed(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a breed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), breeds.map((b, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: b,\n        children: b\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: dogDetails.map(dog => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Name: \", dog.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Breed: \", dog.breed]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Age: \", dog.age]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)]\n      }, dog.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(Search, \"sEIPfEjsemPkKn+JzP6t+Ndm35U=\");\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","useEffect","axios","searchDogs","jsxDEV","_jsxDEV","Search","_s","breed","setBreed","breeds","setBreeds","dogDetails","setDogDetails","loading","setLoading","error","setError","get","then","response","data","catch","console","filters","size","from","sort","dogs","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","map","b","index","style","color","dog","name","age","id","_c","$RefreshReg$"],"sources":["/Users/pop/Desktop/fetch-dogs/src/pages/search.js"],"sourcesContent":["// Search.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { searchDogs } from '../api/fetchAPI';\n\nfunction Search() {\n  const [breed, setBreed] = useState('');\n  const [breeds, setBreeds] = useState([]);\n  const [dogDetails, setDogDetails] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Fetch available breeds on component mount\n  useEffect(() => {\n    axios.get('https://frontend-take-home-service.fetch.com/dogs/breeds')\n      .then(response => {\n        setBreeds(response.data); // Expecting response.data to be an array of breed strings\n      })\n      .catch(error => {\n        console.error('Failed to fetch breeds:', error);\n        setError('Failed to fetch breeds. Please try again.');\n      });\n  }, []);\n\n  // Fetch dog details whenever the selected breed changes\n  useEffect(() => {\n    if (breed) {\n      setLoading(true);\n      const filters = { breeds: [breed], size: 25, from: 0, sort: 'breed:asc' };\n      searchDogs(filters)\n        .then((dogs) => {\n          setDogDetails(dogs);\n          setLoading(false);\n          setError(null);\n        })\n        .catch(error => {\n          console.error(`Failed to fetch dogs for breed ${breed}:`, error);\n          setError(`Failed to fetch dogs for breed ${breed}. Please try again.`);\n          setLoading(false);\n        });\n    } else {\n      // If no breed is selected, clear the dog details\n      setDogDetails([]);\n    }\n  }, [breed]);\n\n  return (\n    <div>\n      <h1>Search Dogs by Breed</h1>\n      <select value={breed} onChange={e => setBreed(e.target.value)}>\n        <option value=\"\">Select a breed</option>\n        {breeds.map((b, index) => (\n          <option key={index} value={b}>{b}</option>\n        ))}\n      </select>\n      {loading && <p>Loading...</p>}\n      {error && <p style={{ color: 'red' }}>Error: {error}</p>}\n      <ul>\n        {dogDetails.map((dog) => (\n          <li key={dog.id}>\n            <p>Name: {dog.name}</p>\n            <p>Breed: {dog.breed}</p>\n            <p>Age: {dog.age}</p>\n            {/* Add other details (e.g., image, zip_code) as desired */}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default Search;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}