{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'https://frontend-take-home-service.fetch.com';\naxios.defaults.withCredentials = true;\nexport const login = async (name, email) => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/auth/login`, {\n      name,\n      email\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Login API error:', error);\n    throw error;\n  }\n};\n\n// Function to fetch details for a single dog by ID\nconst fetchDogDetails = async id => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/dogs/${id}`);\n    return response.data; // Assuming the endpoint returns the full dog details\n  } catch (error) {\n    console.error(`Failed to fetch details for dog ID ${id}:`, error);\n    return null; // Return null or an empty object if the fetch fails\n  }\n};\n\n// Function to search dogs and fetch detailed data for each dog\nexport const searchDogs = async (filters = {}) => {\n  try {\n    const searchResponse = await axios.get(`${API_BASE_URL}/dogs/search`, {\n      params: filters\n    });\n    if (searchResponse.data && Array.isArray(searchResponse.data.resultIds)) {\n      const dogDetailsPromises = searchResponse.data.resultIds.map(id => fetchDogDetails(id));\n      const dogs = await Promise.all(dogDetailsPromises);\n      return dogs.filter(dog => dog !== null); // Filter out any null responses\n    }\n    return []; // Return empty array if no valid data is returned\n  } catch (error) {\n    console.error('Search API error:', error);\n    return []; // Return empty array on error\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","defaults","withCredentials","login","name","email","response","post","data","error","console","fetchDogDetails","id","get","searchDogs","filters","searchResponse","params","Array","isArray","resultIds","dogDetailsPromises","map","dogs","Promise","all","filter","dog"],"sources":["/Users/pop/Desktop/fetch-dogs/src/api/fetchAPI.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = 'https://frontend-take-home-service.fetch.com';\n\naxios.defaults.withCredentials = true;\n\nexport const login = async (name, email) => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/auth/login`, { name, email });\n    return response.data;\n  } catch (error) {\n    console.error('Login API error:', error);\n    throw error;\n  }\n};\n\n// Function to fetch details for a single dog by ID\nconst fetchDogDetails = async (id) => {\n    try {\n        const response = await axios.get(`${API_BASE_URL}/dogs/${id}`);\n        return response.data; // Assuming the endpoint returns the full dog details\n    } catch (error) {\n        console.error(`Failed to fetch details for dog ID ${id}:`, error);\n        return null; // Return null or an empty object if the fetch fails\n    }\n};\n\n// Function to search dogs and fetch detailed data for each dog\nexport const searchDogs = async (filters = {}) => {\n    try {\n        const searchResponse = await axios.get(`${API_BASE_URL}/dogs/search`, { params: filters });\n        if (searchResponse.data && Array.isArray(searchResponse.data.resultIds)) {\n            const dogDetailsPromises = searchResponse.data.resultIds.map(id => fetchDogDetails(id));\n            const dogs = await Promise.all(dogDetailsPromises);\n            return dogs.filter(dog => dog !== null); // Filter out any null responses\n        }\n        return []; // Return empty array if no valid data is returned\n    } catch (error) {\n        console.error('Search API error:', error);\n        return []; // Return empty array on error\n    }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,8CAA8C;AAEnED,KAAK,CAACE,QAAQ,CAACC,eAAe,GAAG,IAAI;AAErC,OAAO,MAAMC,KAAK,GAAG,MAAAA,CAAOC,IAAI,EAAEC,KAAK,KAAK;EAC1C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,IAAI,CAAC,GAAGP,YAAY,aAAa,EAAE;MAAEI,IAAI;MAAEC;IAAM,CAAC,CAAC;IAChF,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;IACxC,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,MAAME,eAAe,GAAG,MAAOC,EAAE,IAAK;EAClC,IAAI;IACA,MAAMN,QAAQ,GAAG,MAAMP,KAAK,CAACc,GAAG,CAAC,GAAGb,YAAY,SAASY,EAAE,EAAE,CAAC;IAC9D,OAAON,QAAQ,CAACE,IAAI,CAAC,CAAC;EAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,sCAAsCG,EAAE,GAAG,EAAEH,KAAK,CAAC;IACjE,OAAO,IAAI,CAAC,CAAC;EACjB;AACJ,CAAC;;AAED;AACA,OAAO,MAAMK,UAAU,GAAG,MAAAA,CAAOC,OAAO,GAAG,CAAC,CAAC,KAAK;EAC9C,IAAI;IACA,MAAMC,cAAc,GAAG,MAAMjB,KAAK,CAACc,GAAG,CAAC,GAAGb,YAAY,cAAc,EAAE;MAAEiB,MAAM,EAAEF;IAAQ,CAAC,CAAC;IAC1F,IAAIC,cAAc,CAACR,IAAI,IAAIU,KAAK,CAACC,OAAO,CAACH,cAAc,CAACR,IAAI,CAACY,SAAS,CAAC,EAAE;MACrE,MAAMC,kBAAkB,GAAGL,cAAc,CAACR,IAAI,CAACY,SAAS,CAACE,GAAG,CAACV,EAAE,IAAID,eAAe,CAACC,EAAE,CAAC,CAAC;MACvF,MAAMW,IAAI,GAAG,MAAMC,OAAO,CAACC,GAAG,CAACJ,kBAAkB,CAAC;MAClD,OAAOE,IAAI,CAACG,MAAM,CAACC,GAAG,IAAIA,GAAG,KAAK,IAAI,CAAC,CAAC,CAAC;IAC7C;IACA,OAAO,EAAE,CAAC,CAAC;EACf,CAAC,CAAC,OAAOlB,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;IACzC,OAAO,EAAE,CAAC,CAAC;EACf;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}