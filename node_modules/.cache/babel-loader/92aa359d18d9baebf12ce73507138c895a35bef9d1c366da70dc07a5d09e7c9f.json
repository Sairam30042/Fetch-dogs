{"ast":null,"code":"// fetchAPI.js\nimport axios from 'axios';\nconst API_BASE_URL = 'https://frontend-take-home-service.fetch.com';\n\n// Ensure cookies are included with every request\naxios.defaults.withCredentials = true;\nexport const login = async (name, email) => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/auth/login`, {\n      name,\n      email\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Login API error:', error);\n    throw error;\n  }\n};\n\n// Fetch multiple dog details by passing an array of dog IDs\nexport const fetchDogsByIds = async dogIDs => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/dogs`, dogIDs);\n    return response.data; // Expected to return an array of Dog objects\n  } catch (error) {\n    console.error('Failed to fetch dog details:', error);\n    throw error;\n  }\n};\n\n// Search for dogs based on filters, then fetch full details for the returned IDs\nexport const searchDogs = async (filters = {}) => {\n  try {\n    const searchResponse = await axios.get(`${API_BASE_URL}/dogs/search`, {\n      params: filters\n    });\n    if (searchResponse.data && Array.isArray(searchResponse.data.resultIds)) {\n      const dogs = await fetchDogsByIds(searchResponse.data.resultIds);\n      return dogs;\n    }\n    return [];\n  } catch (error) {\n    console.error('Search API error:', error);\n    return [];\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","defaults","withCredentials","login","name","email","response","post","data","error","console","fetchDogsByIds","dogIDs","searchDogs","filters","searchResponse","get","params","Array","isArray","resultIds","dogs"],"sources":["/Users/pop/Desktop/fetch-dogs/src/api/fetchAPI.js"],"sourcesContent":["// fetchAPI.js\nimport axios from 'axios';\n\nconst API_BASE_URL = 'https://frontend-take-home-service.fetch.com';\n\n// Ensure cookies are included with every request\naxios.defaults.withCredentials = true;\n\nexport const login = async (name, email) => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/auth/login`, { name, email });\n    return response.data;\n  } catch (error) {\n    console.error('Login API error:', error);\n    throw error;\n  }\n};\n\n// Fetch multiple dog details by passing an array of dog IDs\nexport const fetchDogsByIds = async (dogIDs) => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/dogs`, dogIDs);\n    return response.data; // Expected to return an array of Dog objects\n  } catch (error) {\n    console.error('Failed to fetch dog details:', error);\n    throw error;\n  }\n};\n\n// Search for dogs based on filters, then fetch full details for the returned IDs\nexport const searchDogs = async (filters = {}) => {\n  try {\n    const searchResponse = await axios.get(`${API_BASE_URL}/dogs/search`, { params: filters });\n    if (searchResponse.data && Array.isArray(searchResponse.data.resultIds)) {\n      const dogs = await fetchDogsByIds(searchResponse.data.resultIds);\n      return dogs;\n    }\n    return [];\n  } catch (error) {\n    console.error('Search API error:', error);\n    return [];\n  }\n};\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,8CAA8C;;AAEnE;AACAD,KAAK,CAACE,QAAQ,CAACC,eAAe,GAAG,IAAI;AAErC,OAAO,MAAMC,KAAK,GAAG,MAAAA,CAAOC,IAAI,EAAEC,KAAK,KAAK;EAC1C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,IAAI,CAAC,GAAGP,YAAY,aAAa,EAAE;MAAEI,IAAI;MAAEC;IAAM,CAAC,CAAC;IAChF,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;IACxC,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAME,cAAc,GAAG,MAAOC,MAAM,IAAK;EAC9C,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMP,KAAK,CAACQ,IAAI,CAAC,GAAGP,YAAY,OAAO,EAAEY,MAAM,CAAC;IACjE,OAAON,QAAQ,CAACE,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpD,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMI,UAAU,GAAG,MAAAA,CAAOC,OAAO,GAAG,CAAC,CAAC,KAAK;EAChD,IAAI;IACF,MAAMC,cAAc,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAAC,GAAGhB,YAAY,cAAc,EAAE;MAAEiB,MAAM,EAAEH;IAAQ,CAAC,CAAC;IAC1F,IAAIC,cAAc,CAACP,IAAI,IAAIU,KAAK,CAACC,OAAO,CAACJ,cAAc,CAACP,IAAI,CAACY,SAAS,CAAC,EAAE;MACvE,MAAMC,IAAI,GAAG,MAAMV,cAAc,CAACI,cAAc,CAACP,IAAI,CAACY,SAAS,CAAC;MAChE,OAAOC,IAAI;IACb;IACA,OAAO,EAAE;EACX,CAAC,CAAC,OAAOZ,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;IACzC,OAAO,EAAE;EACX;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}