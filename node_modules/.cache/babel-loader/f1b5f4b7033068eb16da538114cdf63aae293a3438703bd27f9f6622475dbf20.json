{"ast":null,"code":"var _jsxFileName = \"/Users/pop/Desktop/fetch-dogs/src/pages/search.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Search() {\n  _s();\n  const [breed, setBreed] = useState(''); // Initializing breed state to an empty string\n  const [dogIds, setDogIds] = useState([]);\n  const [dogDetails, setDogDetails] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Fetch dog IDs whenever breed changes\n  useEffect(() => {\n    if (breed) {\n      setLoading(true);\n      setError(null);\n      axios.get('https://frontend-take-home-service.fetch.com/dogs/search', {\n        params: {\n          breed,\n          size: 25,\n          from: 0,\n          sort: 'breed:asc'\n        }\n      }).then(response => {\n        setDogIds(response.data.resultIds);\n        setLoading(false);\n      }).catch(error => {\n        console.error('Failed to fetch dog IDs:', error);\n        setError('Failed to fetch dog IDs');\n        setLoading(false);\n      });\n    }\n  }, [breed]);\n\n  // Fetch detailed information for each dog when dogIds changes\n  useEffect(() => {\n    if (dogIds.length > 0) {\n      setLoading(true);\n      setError(null);\n      const detailsPromises = dogIds.map(id => axios.get(`https://frontend-take-home-service.fetch.com/dogs/${id}`).catch(err => {\n        console.error(`Failed to fetch details for dog ID ${id}:`, err);\n        return {\n          data: {\n            error: true,\n            id,\n            message: `Failed to fetch details for dog ID ${id}.`\n          }\n        }; // Handle individual errors\n      }));\n      Promise.all(detailsPromises).then(details => {\n        setDogDetails(details.filter(detail => !detail.data.error)); // Filter out failed requests\n        setLoading(false);\n      }).catch(error => {\n        console.error('Failed to fetch dog details:', error);\n        setError('Failed to fetch dog details');\n        setLoading(false);\n      });\n    }\n  }, [dogIds]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Search Dogs by Breed: \", breed]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: breed,\n      onChange: e => setBreed(e.target.value),\n      placeholder: \"Type breed to search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: dogDetails.map((dog, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Name: \", dog.name, \", Breed: \", dog.breed, \", Age: \", dog.age]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n_s(Search, \"Hijq/Ow6g/ZgBRm9fpP/dI2H6kM=\");\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Search","_s","breed","setBreed","dogIds","setDogIds","dogDetails","setDogDetails","loading","setLoading","error","setError","get","params","size","from","sort","then","response","data","resultIds","catch","console","length","detailsPromises","map","id","err","message","Promise","all","details","filter","detail","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","dog","index","name","age","_c","$RefreshReg$"],"sources":["/Users/pop/Desktop/fetch-dogs/src/pages/search.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction Search() {\n    const [breed, setBreed] = useState(''); // Initializing breed state to an empty string\n    const [dogIds, setDogIds] = useState([]);\n    const [dogDetails, setDogDetails] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    // Fetch dog IDs whenever breed changes\n    useEffect(() => {\n        if (breed) {\n            setLoading(true);\n            setError(null);\n\n            axios.get('https://frontend-take-home-service.fetch.com/dogs/search', {\n                params: { breed, size: 25, from: 0, sort: 'breed:asc' }\n            })\n            .then(response => {\n                setDogIds(response.data.resultIds);\n                setLoading(false);\n            })\n            .catch(error => {\n                console.error('Failed to fetch dog IDs:', error);\n                setError('Failed to fetch dog IDs');\n                setLoading(false);\n            });\n        }\n    }, [breed]);\n\n    // Fetch detailed information for each dog when dogIds changes\n    useEffect(() => {\n        if (dogIds.length > 0) {\n            setLoading(true);\n            setError(null);\n            const detailsPromises = dogIds.map(id => \n                axios.get(`https://frontend-take-home-service.fetch.com/dogs/${id}`)\n                .catch(err => {\n                    console.error(`Failed to fetch details for dog ID ${id}:`, err);\n                    return { data: { error: true, id, message: `Failed to fetch details for dog ID ${id}.` } }; // Handle individual errors\n                })\n            );\n\n            Promise.all(detailsPromises)\n            .then(details => {\n                setDogDetails(details.filter(detail => !detail.data.error)); // Filter out failed requests\n                setLoading(false);\n            })\n            .catch(error => {\n                console.error('Failed to fetch dog details:', error);\n                setError('Failed to fetch dog details');\n                setLoading(false);\n            });\n        }\n    }, [dogIds]);\n\n    return (\n        <div>\n            <h1>Search Dogs by Breed: {breed}</h1>\n            <input\n                value={breed}\n                onChange={e => setBreed(e.target.value)}\n                placeholder=\"Type breed to search\"\n            />\n            {loading && <p>Loading...</p>}\n            {error && <p>Error: {error}</p>}\n            <ul>\n                {dogDetails.map((dog, index) => (\n                    <li key={index}>\n                        Name: {dog.name}, Breed: {dog.breed}, Age: {dog.age}\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n}\n\nexport default Search;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}