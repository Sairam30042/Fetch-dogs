{"ast":null,"code":"var _jsxFileName = \"/Users/pop/Desktop/fetch-dogs/src/pages/Search.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { searchDogs } from '../api/fetchAPI';\nimport DogCard from '../components/DogCard';\n\n// In your Search component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Search() {\n  _s();\n  const [breed, setBreed] = useState('');\n  const [dogs, setDogs] = useState([]);\n  const handleSearch = async event => {\n    event.preventDefault();\n    try {\n      const data = await searchDogs({\n        breed\n      });\n      console.log(\"Data received:\", data); // Check what you are setting in state\n      setDogs(data);\n    } catch (error) {\n      console.error('Failed to fetch dogs:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Search Dogs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSearch,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: breed,\n        onChange: e => setBreed(e.target.value),\n        placeholder: \"Search by breed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), dogs.length > 0 ? dogs.map(dog => /*#__PURE__*/_jsxDEV(DogCard, {\n      dog: dog\n    }, dog === null || dog === void 0 ? void 0 : dog.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 33\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No results found or still loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n_s(Search, \"v5vuaWjU8eLDWLrAfAGLvoidt/M=\");\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","useEffect","searchDogs","DogCard","jsxDEV","_jsxDEV","Search","_s","breed","setBreed","dogs","setDogs","handleSearch","event","preventDefault","data","console","log","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","e","target","placeholder","length","map","dog","id","_c","$RefreshReg$"],"sources":["/Users/pop/Desktop/fetch-dogs/src/pages/Search.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { searchDogs } from '../api/fetchAPI';\nimport DogCard from '../components/DogCard';\n\n// In your Search component\nfunction Search() {\n    const [breed, setBreed] = useState('');\n    const [dogs, setDogs] = useState([]);\n\n    const handleSearch = async (event) => {\n        event.preventDefault();\n        try {\n            const data = await searchDogs({ breed });\n            console.log(\"Data received:\", data);  // Check what you are setting in state\n            setDogs(data);\n        } catch (error) {\n            console.error('Failed to fetch dogs:', error);\n        }\n    };\n    \n\n    return (\n        <div>\n            <h1>Search Dogs</h1>\n            <form onSubmit={handleSearch}>\n                <input \n                    type=\"text\" \n                    value={breed} \n                    onChange={(e) => setBreed(e.target.value)} \n                    placeholder=\"Search by breed\" \n                />\n                <button type=\"submit\">Search</button>\n            </form>\n            {dogs.length > 0 ? (\n                dogs.map(dog => <DogCard key={dog?.id} dog={dog} />)\n            ) : (\n                <p>No results found or still loading...</p>\n            )}\n        </div>\n    );\n    \n}\n\n\nexport default Search;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,UAAU,QAAQ,iBAAiB;AAC5C,OAAOC,OAAO,MAAM,uBAAuB;;AAE3C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMY,YAAY,GAAG,MAAOC,KAAK,IAAK;IAClCA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,IAAI;MACA,MAAMC,IAAI,GAAG,MAAMb,UAAU,CAAC;QAAEM;MAAM,CAAC,CAAC;MACxCQ,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,IAAI,CAAC,CAAC,CAAE;MACtCJ,OAAO,CAACI,IAAI,CAAC;IACjB,CAAC,CAAC,OAAOG,KAAK,EAAE;MACZF,OAAO,CAACE,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IACjD;EACJ,CAAC;EAGD,oBACIb,OAAA;IAAAc,QAAA,gBACId,OAAA;MAAAc,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBlB,OAAA;MAAMmB,QAAQ,EAAEZ,YAAa;MAAAO,QAAA,gBACzBd,OAAA;QACIoB,IAAI,EAAC,MAAM;QACXC,KAAK,EAAElB,KAAM;QACbmB,QAAQ,EAAGC,CAAC,IAAKnB,QAAQ,CAACmB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC1CI,WAAW,EAAC;MAAiB;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC,eACFlB,OAAA;QAAQoB,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,EACNb,IAAI,CAACqB,MAAM,GAAG,CAAC,GACZrB,IAAI,CAACsB,GAAG,CAACC,GAAG,iBAAI5B,OAAA,CAACF,OAAO;MAAe8B,GAAG,EAAEA;IAAI,GAAlBA,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEC,EAAE;MAAAd,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CAAC,CAAC,gBAEpDlB,OAAA;MAAAc,QAAA,EAAG;IAAoC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAC7C;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAGd;AAAChB,EAAA,CApCQD,MAAM;AAAA6B,EAAA,GAAN7B,MAAM;AAuCf,eAAeA,MAAM;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}